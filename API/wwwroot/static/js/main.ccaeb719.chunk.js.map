{"version":3,"sources":["app/models/pagination.ts","app/api/agent.ts","app/models/activity.ts","app/models/profile.ts","app/stores/activityStore.ts","app/stores/profileStore.ts","app/stores/userStore.ts","app/stores/store.ts","app/stores/commonStore.ts","app/stores/modalStore.ts","app/stores/commentStore.ts","features/activities/dashboard/activityFilters/ActivityFilters.tsx","features/profiles/FollowButton.tsx","features/profiles/ProfileCard.tsx","features/activities/dashboard/activityListItemAttendee/ActivityListItemAttendee.tsx","features/activities/dashboard/activityListItem/ActivityListItem.tsx","features/activities/dashboard/activityList/ActivityList.tsx","features/activities/dashboard/activityListItemPlaceholder/ActivityListItemPlaceholder.tsx","features/activities/dashboard/activitiesDashboard/ActivitiesDashboard.tsx","app/layout/navBar/NavBar.tsx","app/common/form/customeTextInput/CustomTextInput.tsx","features/users/loginForm/LoginForm.tsx","features/errors/ValidationErrors.tsx","features/users/registerForm/RegisterForm.tsx","features/home/homePage/HomePage.tsx","app/layout/loadingComponent/LoadingComponent.tsx","app/common/form/customTextArea/CustomTextArea.tsx","app/common/form/customSelectInput/CustomeSelectInput.tsx","app/common/form/options/CategoryOptions.ts","app/common/form/customDateInput/CustomDateInput.tsx","features/activities/form/activityForm/ActivityForm.tsx","features/activities/details/activityDetailedChat/ActivityDetailedChat.tsx","features/activities/details/activityDetailedHeader/ActivityDetailedHeader.tsx","features/activities/details/activityDetailedInfo/ActivityDetailedInfo.tsx","features/activities/details/activityDetailedSidebar/ActivityDetailedSidebar.tsx","features/activities/details/activityDetails/ActivityDetails.tsx","features/errors/TestErrors.tsx","features/errors/NotFound.tsx","features/errors/ServerError.tsx","app/common/modals/modalContainer/ModalContainer.tsx","features/profiles/ProfileActivities.tsx","features/profiles/profileFollowings.tsx","app/common/imageUpload/PhotoWidgetCropper.tsx","app/common/imageUpload/PhotoWidgetDropzone.tsx","app/common/imageUpload/PhotoUploadWidget.tsx","features/profiles/ProfilePhotos.tsx","features/profiles/ProfileContent.tsx","features/profiles/ProfileHeader.tsx","features/profiles/ProfilePage.tsx","app/layout/PrivateRoute.tsx","app/layout/App.tsx","reportWebVitals.ts","app/layout/ScrollToTop.tsx","index.tsx"],"names":["PaginatedResult","data","pagination","this","PagingParams","pageNumber","pageSize","axios","defaults","baseURL","process","interceptors","request","use","config","token","store","commonStore","headers","Authorization","response","a","JSON","parse","error","status","toast","method","errors","hasOwnProperty","history","push","modalStateErrors","key","flat","setServerError","Promise","reject","responseBody","url","get","then","body","post","patch","delete","agent","Activities","list","params","details","id","create","activity","update","attend","Account","current","login","user","register","fbLogin","accessToken","Profiles","username","uploadPhoto","file","formData","FormData","append","setMain","updateProfile","profile","updateFolowing","listFollowing","predicate","listActivities","Activity","init","Object","assign","ActivityFormValues","undefined","title","category","description","date","city","venue","Profile","displayName","image","ActivityStore","activityRegistry","Map","selectedActivity","editMode","loading","loadingInitial","pagingParams","set","setPagingParams","setPredicate","value","resetPredicated","forEach","loadActivities","axiosParams","result","act","setActivity","setPagination","setLoadingInitial","console","log","loadActivity","getActivity","runInAction","userStore","isGoing","attendees","some","toLowerCase","isHost","hostUsername","toLocaleLowerCase","host","find","x","Date","state","createActivity","attendee","newActivity","updateActivity","deleteActivity","updateAttendance","filter","cancelActivityToggle","isCancelled","clearSelectedActivity","updateAttendeeFollowing","following","followersCount","makeAutoObservable","reaction","keys","clear","URLSearchParams","toString","toISOString","Array","from","values","sort","b","getTime","entries","activitiesDate","reduce","activities","format","ProfileStore","loadingProfile","uploading","followings","loadingFollowings","activeTab","userActivities","loadingActivities","setActiveTab","loadProfile","photo","photos","isMain","setImage","p","deletePhoto","updateFollowing","activityStore","loadFollowings","loadUserActivities","UserStore","fbAccessToken","fbLoading","creds","setToken","modalStore","closeModal","logout","window","localStorage","removeItem","getUser","getFacebookLoginStatus","FB","getLoginStatus","authResponse","facebookLogin","apiLogin","catch","scope","getItem","appLoaded","setAppLoaded","setItem","modal","open","openModal","content","profileStore","commentStore","comments","hubConnection","createHubConnection","activityId","HubConnectionBuilder","withUrl","accessTokenFactory","withAutomaticReconnect","configureLogging","LogLevel","Information","build","start","on","comment","createdAt","unshift","stopHubConnection","stop","clearComments","addComment","invoke","StoreContext","createContext","useStore","useContext","observer","Menu","vertical","size","style","width","marginTop","Header","icon","attached","color","Item","active","has","onClick","onChange","Reveal","animated","Content","visible","Button","fluid","hidden","basic","e","preventDefault","handleFollow","Card","as","Link","to","Image","src","Description","extra","Icon","name","styles","borderColor","borderWidth","List","horizontal","map","Popup","hoverable","trigger","circular","ActivityListItem","Segment","Group","Label","textAlingn","marginBottom","secondary","clearing","floated","groupedActivities","group","sub","ActivityListItemPlaceholder","Placeholder","minHeight","Line","Paragraph","disabled","useState","loadingNext","setLoadingNext","useEffect","Grid","Column","pageStart","loadMore","currentPage","hasMore","totalPages","initialLoad","Loader","inverted","fixed","Container","NavLink","exact","header","alt","marginRight","positive","avatar","spaced","Dropdown","pointing","text","DropdownMenu","DropdownItem","CustomTextInput","props","useField","field","meta","Form","Field","touched","label","initialValues","email","password","onSubmit","setErrors","handleSubmit","isSubmitting","className","autoComplete","textAlign","placeholder","type","render","ValidationErrors","Message","err","i","userName","validationSchema","Yup","required","isValid","dirty","isLoggedIn","Divider","LoadingComponent","Dimmer","CustomTextArea","CustomSelectInput","helpers","Select","clearable","options","d","setValue","onBlur","setTouched","categoryOptions","CustomDateInput","selected","useHistory","useParams","nullable","enableReinitialize","uuid","handleFormSubmit","rows","placeholderText","showTimeSelect","timeCaption","dateFormat","border","resetForm","position","onKeyPress","shiftKey","Comment","Avatar","Author","Metadata","formatDistanceToNow","Text","whiteSpace","activityImageStyle","activityImageTextStyle","bottom","left","height","padding","zIndex","top","ribbon","verticalAlign","length","relaxed","divided","Extra","TestErrors","widths","baseUrl","primary","NotFound","Inline","message","Modal","onClose","panes","menuItem","pane","Tab","Pane","menu","onTabChange","activeIndex","handleTabchange","itemsPerRow","link","objectFit","Meta","PhotoWidgetCropper","imagePreview","setCropper","initialAspectRatio","aspectRatio","preview","guides","viewMode","autoCropArea","background","onInitialized","cropper","PhotoWidgetDropzone","setFiles","dzStyles","borderRadus","paddingTop","onDrop","useCallback","acceptedFiles","URL","createObjectURL","useDropzone","getRootProps","getInputProps","isDragActive","PhotoUploadWidget","files","revokeObjectURL","overflow","getCroppedCanvas","toBlob","blob","isCurrentUser","addPhotoMode","setAddPhotoMode","target","setTarget","currentTarget","handleSetMainPhoto","handleDeletePhoto","menuPosition","Statistic","followingCount","PrivateRoute","Component","component","rest","location","useLocation","finally","hideProgressBar","path","HomePage","ActivitiesDashboard","ActivityDetails","ActivityForm","ProfilePage","ServerError","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ScrollToTop","pathname","scrollTo","createBrowserHistory","ReactDOM","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.ccaeb719.chunk.js","sourcesContent":["export interface Pagination {\r\n  currentPage: number;\r\n  itemsPerPage: number;\r\n  totalItems: number;\r\n  totalPages: number;\r\n}\r\n\r\nexport class PaginatedResult<T> {\r\n  data: T;\r\n  pagination: Pagination;\r\n\r\n  constructor(data: T, pagination: Pagination) {\r\n    this.data = data;\r\n    this.pagination = pagination;\r\n  }\r\n}\r\n\r\nexport class PagingParams {\r\n  pageNumber;\r\n  pageSize;\r\n\r\n  constructor(pageNumber = 1, pageSize = 2) {\r\n    this.pageNumber = pageNumber;\r\n    this.pageSize = pageSize;\r\n  }\r\n}\r\n","import axios, { AxiosError, AxiosResponse } from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Activity, ActivityFormValues } from \"../models/activity\";\r\nimport { history } from \"../../index\";\r\nimport { store } from \"../stores/store\";\r\nimport { User, UserFormValues } from \"../models/user\";\r\nimport { Photo, Profile, UserActivity } from \"../models/profile\";\r\nimport { PaginatedResult } from \"../models/pagination\";\r\n\r\nconst sleep = (delay: number) => {\r\n  return new Promise((resolve) => {\r\n    setTimeout(resolve, delay);\r\n  });\r\n};\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\r\n\r\naxios.interceptors.request.use((config) => {\r\n  const token = store.commonStore.token;\r\n  if (token) config.headers.Authorization = `Bearer ${token}`;\r\n  return config;\r\n});\r\n\r\naxios.interceptors.response.use(\r\n  async (response) => {\r\n    if (process.env.NODE_ENV === \"development\") await sleep(1000);\r\n\r\n    const pagination = response.headers[\"pagination\"];\r\n    if (pagination) {\r\n      response.data = new PaginatedResult(response.data, JSON.parse(pagination));\r\n      return response as AxiosResponse<PaginatedResult<any>>;\r\n    }\r\n\r\n    return response;\r\n  },\r\n  (error: AxiosError) => {\r\n    const { data, status, config } = error.response!;\r\n\r\n    switch (status) {\r\n      case 400:\r\n        if (typeof data === \"string\") {\r\n          toast.error(data);\r\n        }\r\n\r\n        if (config.method === \"get\" && data.errors.hasOwnProperty(\"id\")) {\r\n          history.push(\"/not-found\");\r\n        }\r\n\r\n        if (data.errors) {\r\n          const modalStateErrors = [];\r\n          for (const key in data.errors) {\r\n            if (data.errors[key]) {\r\n              modalStateErrors.push(data.errors[key]);\r\n            }\r\n          }\r\n          throw modalStateErrors.flat();\r\n        } else {\r\n          toast.error(data);\r\n        }\r\n        break;\r\n      case 401:\r\n        toast.error(\"unauthorized\");\r\n        break;\r\n      case 404:\r\n        history.push(\"/not-found\");\r\n        break;\r\n      case 500:\r\n        store.commonStore.setServerError(data);\r\n        history.push(\"/server-error\");\r\n        break;\r\n    }\r\n\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nconst responseBody = <T>(response: AxiosResponse<T>) => response.data;\r\n\r\nconst request = {\r\n  get: <T>(url: string) => axios.get<T>(url).then(responseBody),\r\n  post: <T>(url: string, body: {}) => axios.post<T>(url, body).then(responseBody),\r\n  patch: <T>(url: string, body: {}) => axios.patch<T>(url, body).then(responseBody),\r\n  del: <T>(url: string) => axios.delete<T>(url).then(responseBody),\r\n};\r\n\r\nconst Activities = {\r\n  list: (params: URLSearchParams) =>\r\n    axios.get<PaginatedResult<Activity[]>>(\"activities\", { params }).then(responseBody),\r\n  details: (id: string) => request.get<Activity>(`/activities/${id}`),\r\n  create: (activity: ActivityFormValues) => request.post<void>(\"/activities\", activity),\r\n  update: (activity: ActivityFormValues) =>\r\n    request.patch<void>(`/activities/${activity.id}`, activity),\r\n  delete: (id: string) => request.del<void>(`/activities/${id}`),\r\n  attend: (id: string) => request.post<void>(`/activities/${id}/attend`, {}),\r\n};\r\n\r\nconst Account = {\r\n  current: () => request.get<User>(\"/account\"),\r\n  login: (user: UserFormValues) => request.post<User>(\"/account/login\", user),\r\n  register: (user: UserFormValues) => request.post<User>(\"/account/register\", user),\r\n  fbLogin: (accessToken: string) =>\r\n    request.post<User>(`/account/fbLogin?accessToken=${accessToken}`, {}),\r\n};\r\n\r\nconst Profiles = {\r\n  get: (username: string) => request.get<Profile>(`/profiles/${username}`),\r\n  uploadPhoto: (file: Blob) => {\r\n    let formData = new FormData();\r\n    formData.append(\"File\", file);\r\n\r\n    return axios.post<Photo>(\"photos\", formData, {\r\n      headers: { \"Content-type\": \"multipart/form-data\" },\r\n    });\r\n  },\r\n  setMain: (id: string) => request.post(`/photos/${id}/setMain`, {}),\r\n  delete: (id: string) => request.del(`/photos/${id}/`),\r\n  updateProfile: (profile: Partial<Profile>) => request.patch(`/profiles`, profile),\r\n  updateFolowing: (username: string) => request.post(`/follow/${username}`, {}),\r\n  listFollowing: (username: string, predicate: string) =>\r\n    request.get<Profile[]>(`/follow/${username}?predicate=${predicate}`),\r\n  listActivities: (username: string, predicate: string) =>\r\n    request.get<UserActivity[]>(`/profiles/${username}/activities?predicate=${predicate}`),\r\n};\r\n\r\nconst agent = {\r\n  Activities,\r\n  Account,\r\n  Profiles,\r\n};\r\n\r\nexport default agent;\r\n","import { Profile } from \"./profile\";\r\n\r\nexport interface Activity {\r\n  id: string;\r\n  title: string;\r\n  date: Date | null;\r\n  description: string;\r\n  category: string;\r\n  city: string;\r\n  venue: string;\r\n  hostUsername: string;\r\n  isCancelled: boolean;\r\n  isGoing: boolean;\r\n  isHost: boolean;\r\n  host?: Profile;\r\n  attendees: Profile[];\r\n}\r\n\r\nexport class Activity implements Activity {\r\n  constructor(init?: ActivityFormValues) {\r\n    Object.assign(this, init);\r\n  }\r\n}\r\n\r\nexport class ActivityFormValues {\r\n  id?: string = undefined;\r\n  title: string = \"\";\r\n  category: string = \"\";\r\n  description: string = \"\";\r\n  date: Date | null = null;\r\n  city: string = \"\";\r\n  venue: string = \"\";\r\n\r\n  constructor(activity?: ActivityFormValues) {\r\n    if (activity) {\r\n      this.id = activity.id;\r\n      this.title = activity.title;\r\n      this.category = activity.category;\r\n      this.description = activity.description;\r\n      this.date = activity.date;\r\n      this.venue = activity.venue;\r\n      this.city = activity.city;\r\n    }\r\n  }\r\n}\r\n","import { User } from \"./user\";\r\n\r\nexport interface Profile {\r\n  username: string;\r\n  displayName: string;\r\n  image?: string;\r\n  bio?: string;\r\n  followersCount: number;\r\n  followingCount: number;\r\n  following: boolean;\r\n  photos?: Photo[];\r\n}\r\n\r\nexport class Profile implements Profile {\r\n  constructor(user: User) {\r\n    this.username = user.username;\r\n    this.displayName = user.displayName;\r\n    this.image = user.image;\r\n  }\r\n}\r\n\r\nexport interface Photo {\r\n  id: string;\r\n  url: string;\r\n  isMain: boolean;\r\n}\r\n\r\nexport interface UserActivity {\r\n  id: string;\r\n  title: string;\r\n  category: string;\r\n  date: Date;\r\n}\r\n","import { format } from \"date-fns\";\r\nimport { makeAutoObservable, reaction, runInAction } from \"mobx\";\r\nimport agent from \"../api/agent\";\r\nimport { Activity, ActivityFormValues } from \"../models/activity\";\r\nimport { Pagination, PagingParams } from \"../models/pagination\";\r\nimport { Profile } from \"../models/profile\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class ActivityStore {\r\n  activityRegistry = new Map<String, Activity>();\r\n  selectedActivity: Activity | undefined = undefined;\r\n  editMode = false;\r\n  loading = false;\r\n  loadingInitial = false;\r\n  pagination: Pagination | null = null;\r\n  pagingParams = new PagingParams();\r\n  predicate = new Map().set(\"all\", true);\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n\r\n    reaction(\r\n      () => this.predicate.keys(),\r\n      () => {\r\n        this.pagingParams = new PagingParams();\r\n        this.activityRegistry.clear();\r\n        this.loadActivities();\r\n      }\r\n    );\r\n  }\r\n\r\n  setPagingParams = (pagingParams: PagingParams) => {\r\n    this.pagingParams = pagingParams;\r\n  };\r\n\r\n  setPredicate = (predicate: string, value: string | Date) => {\r\n    const resetPredicated = () => {\r\n      this.predicate.forEach((value, key) => {\r\n        if (key !== \"startDate\") this.predicate.delete(key);\r\n      });\r\n    };\r\n\r\n    switch (predicate) {\r\n      case \"all\":\r\n        resetPredicated();\r\n        this.predicate.set(\"all\", true);\r\n        break;\r\n\r\n      case \"isGoing\":\r\n        resetPredicated();\r\n        this.predicate.set(\"isGoing\", true);\r\n        break;\r\n\r\n      case \"isHost\":\r\n        resetPredicated();\r\n        this.predicate.set(\"isHost\", true);\r\n        break;\r\n\r\n      case \"startDate\":\r\n        resetPredicated();\r\n        this.predicate.delete(\"startDate\");\r\n        this.predicate.set(\"startDate\", value);\r\n        break;\r\n    }\r\n  };\r\n\r\n  get axiosParams() {\r\n    const params = new URLSearchParams();\r\n    params.append(\"pageNumber\", this.pagingParams.pageNumber.toString());\r\n    params.append(\"pageSize\", this.pagingParams.pageSize.toString());\r\n    this.predicate.forEach((value, key) => {\r\n      if (key === \"startDate\") {\r\n        params.append(key, (value as Date).toISOString());\r\n      } else {\r\n        params.append(key, value);\r\n      }\r\n    });\r\n    return params;\r\n  }\r\n\r\n  get activitiesDate() {\r\n    return Array.from(this.activityRegistry.values()).sort(\r\n      (a, b) => a.date!.getTime() - b.date!.getTime()\r\n    );\r\n  }\r\n\r\n  get groupedActivities() {\r\n    return Object.entries(\r\n      this.activitiesDate.reduce((activities, activity) => {\r\n        const date = format(activity.date!, \"dd  MMM yyyy h:mm aa\");\r\n        activities[date] = activities[date] ? [...activities[date], activity] : [activity];\r\n\r\n        return activities;\r\n      }, {} as { [key: string]: Activity[] })\r\n    );\r\n  }\r\n\r\n  loadActivities = async () => {\r\n    this.loadingInitial = true;\r\n    try {\r\n      const result = await agent.Activities.list(this.axiosParams);\r\n\r\n      result.data.forEach((act) => {\r\n        this.setActivity(act);\r\n      });\r\n      this.setPagination(result.pagination);\r\n      this.setLoadingInitial(false);\r\n    } catch (error) {\r\n      console.log(error);\r\n      this.setLoadingInitial(false);\r\n    }\r\n  };\r\n\r\n  setPagination = (pagination: Pagination) => {\r\n    this.pagination = pagination;\r\n  };\r\n\r\n  loadActivity = async (id: string) => {\r\n    let activity = this.getActivity(id);\r\n    if (activity) {\r\n      this.selectedActivity = activity;\r\n      return activity;\r\n    } else {\r\n      this.loadingInitial = true;\r\n      try {\r\n        activity = await agent.Activities.details(id);\r\n        this.setActivity(activity);\r\n\r\n        runInAction(() => {\r\n          this.selectedActivity = activity;\r\n        });\r\n\r\n        this.setLoadingInitial(false);\r\n        return activity;\r\n      } catch (error) {\r\n        console.error(error);\r\n        this.setLoadingInitial(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  private setActivity = (activity: Activity) => {\r\n    const user = store.userStore.user;\r\n    if (user) {\r\n      activity.isGoing = activity.attendees!.some(\r\n        (a) => a.username === user.displayName.toLowerCase()\r\n      );\r\n\r\n      activity.isHost = activity.hostUsername === user.displayName.toLocaleLowerCase();\r\n      activity.host = activity.attendees?.find(\r\n        (x) => x.displayName.toLocaleLowerCase() === activity.hostUsername\r\n      );\r\n    }\r\n    activity.date = new Date(activity.date!);\r\n    this.activityRegistry.set(activity.id, activity);\r\n  };\r\n\r\n  private getActivity = (id: string) => {\r\n    return this.activityRegistry.get(id);\r\n  };\r\n\r\n  setLoadingInitial = (state: boolean) => {\r\n    this.loadingInitial = state;\r\n  };\r\n\r\n  createActivity = async (activity: ActivityFormValues) => {\r\n    const user = store.userStore.user;\r\n    const attendee = new Profile(user!);\r\n\r\n    try {\r\n      await agent.Activities.create(activity);\r\n      const newActivity = new Activity(activity);\r\n      newActivity.hostUsername = user!.username;\r\n      newActivity.attendees = [attendee];\r\n      this.setActivity(newActivity);\r\n\r\n      runInAction(() => {\r\n        this.selectedActivity = new Activity();\r\n      });\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  updateActivity = async (activity: ActivityFormValues) => {\r\n    try {\r\n      await agent.Activities.update(activity);\r\n\r\n      runInAction(() => {\r\n        if (activity.id) {\r\n          let updateActivity = {\r\n            ...this.getActivity(activity.id),\r\n            ...activity,\r\n          };\r\n          this.activityRegistry.set(activity.id, updateActivity as Activity);\r\n          this.selectedActivity = updateActivity as Activity;\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  deleteActivity = async (id: string) => {\r\n    this.loading = true;\r\n\r\n    try {\r\n      await agent.Activities.delete(id);\r\n\r\n      runInAction(() => {\r\n        this.activityRegistry.delete(id);\r\n        this.loading = false;\r\n      });\r\n    } catch (error) {\r\n      console.error(error);\r\n      runInAction(() => {\r\n        this.loading = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  updateAttendance = async () => {\r\n    const user = store.userStore.user;\r\n    this.loading = true;\r\n    try {\r\n      await agent.Activities.attend(this.selectedActivity!.id);\r\n\r\n      runInAction(() => {\r\n        if (this.selectedActivity?.isGoing) {\r\n          this.selectedActivity.attendees = this.selectedActivity.attendees?.filter(\r\n            (a) => a.username !== user?.username\r\n          );\r\n          this.selectedActivity.isGoing = false;\r\n        } else {\r\n          const attendee = new Profile(user!);\r\n          this.selectedActivity?.attendees?.push(attendee);\r\n          this.selectedActivity!.isGoing = true;\r\n        }\r\n\r\n        this.activityRegistry.set(this.selectedActivity!.id, this.selectedActivity!);\r\n      });\r\n    } catch (error) {\r\n      console.log(console.error());\r\n    } finally {\r\n      runInAction(() => (this.loading = false));\r\n    }\r\n  };\r\n\r\n  cancelActivityToggle = async () => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Activities.attend(this.selectedActivity!.id);\r\n      runInAction(() => {\r\n        this.selectedActivity!.isCancelled = !this.selectedActivity?.isCancelled;\r\n        this.activityRegistry.set(this.selectedActivity!.id, this.selectedActivity!);\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      runInAction(() => (this.loading = false));\r\n    }\r\n  };\r\n\r\n  clearSelectedActivity = () => {\r\n    this.selectedActivity = undefined;\r\n  };\r\n\r\n  updateAttendeeFollowing = (username: string) => {\r\n    this.activityRegistry.forEach((activity) => {\r\n      activity.attendees.forEach((attendee) => {\r\n        if (attendee.username === username) {\r\n          attendee.following ? attendee.followersCount-- : attendee.followersCount++;\r\n          attendee.following = !attendee.following;\r\n        }\r\n      });\r\n    });\r\n  };\r\n}\r\n","import { makeAutoObservable, reaction, runInAction } from \"mobx\";\r\nimport agent from \"../api/agent\";\r\nimport { Photo, Profile, UserActivity } from \"../models/profile\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class ProfileStore {\r\n  profile: Profile | null = null;\r\n  loadingProfile = false;\r\n  uploading = false;\r\n  loading = false;\r\n  followings: Profile[] = [];\r\n  loadingFollowings = false;\r\n  activeTab = 0;\r\n  userActivities: UserActivity[] = [];\r\n  loadingActivities = false;\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n\r\n    reaction(\r\n      () => this.activeTab,\r\n      (activeTab) => {\r\n        if (activeTab === 3 || activeTab === 4) {\r\n          const predicate = activeTab === 3 ? \"followers\" : \"following\";\r\n          this.loadFollowings(predicate);\r\n        } else {\r\n          this.followings = [];\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  setActiveTab = (activeTab: any) => {\r\n    this.activeTab = activeTab;\r\n  };\r\n\r\n  get isCurrentUser() {\r\n    if (store.userStore.user && this.profile) {\r\n      return store.userStore.user?.displayName.toLocaleLowerCase() === this.profile.username;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  loadProfile = async (username: string) => {\r\n    this.loadingProfile = true;\r\n    try {\r\n      const profile = await agent.Profiles.get(username);\r\n      runInAction(() => {\r\n        this.profile = profile;\r\n        this.loadingProfile = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => (this.loadingProfile = false));\r\n    }\r\n  };\r\n\r\n  uploadPhoto = async (file: Blob) => {\r\n    this.uploading = true;\r\n    try {\r\n      const response = await agent.Profiles.uploadPhoto(file);\r\n      const photo = response.data;\r\n\r\n      runInAction(() => {\r\n        if (this.profile) {\r\n          this.profile.photos?.push(photo);\r\n          if (photo.isMain && store.userStore.user) {\r\n            store.userStore.setImage(photo.url);\r\n            this.profile.image = photo.url;\r\n          }\r\n        }\r\n        this.uploading = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => {\r\n        this.uploading = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  setMain = async (photo: Photo) => {\r\n    this.loading = true;\r\n\r\n    try {\r\n      await agent.Profiles.setMain(photo.id);\r\n      store.userStore.setImage(photo.url);\r\n      runInAction(() => {\r\n        if (this.profile && this.profile.photos) {\r\n          this.profile.photos.find((p) => p.isMain)!.isMain = false;\r\n          this.profile.photos.find((p) => p.id === photo.id)!.isMain = true;\r\n          this.profile.image = photo.url;\r\n          this.loading = false;\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => {\r\n        this.loading = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  deletePhoto = async (photo: Photo) => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Profiles.delete(photo.id);\r\n\r\n      runInAction(() => {\r\n        if (this.profile) {\r\n          this.profile.photos = this.profile.photos?.filter((p) => p.id !== photo.id);\r\n          this.loading = false;\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => (this.loading = false));\r\n    }\r\n  };\r\n\r\n  updateFollowing = async (username: string, following: boolean) => {\r\n    this.loading = true;\r\n\r\n    try {\r\n      await agent.Profiles.updateFolowing(username);\r\n      store.activityStore.updateAttendeeFollowing(username);\r\n\r\n      runInAction(() => {\r\n        if (\r\n          this.profile &&\r\n          this.profile.username !== store.userStore.user?.username &&\r\n          this.profile.username === username\r\n        ) {\r\n          following ? this.profile.followersCount++ : this.profile.followersCount--;\r\n          this.profile.following = !this.profile.following;\r\n        }\r\n\r\n        if (\r\n          this.profile &&\r\n          this.profile.username === store.userStore.user?.displayName.toLowerCase()\r\n        ) {\r\n          following ? this.profile.followersCount++ : this.profile.followersCount--;\r\n        }\r\n\r\n        this.followings.forEach((profile) => {\r\n          if (profile.username === username) {\r\n            profile.following ? profile.followersCount-- : profile.followersCount++;\r\n            profile.following = !profile.following;\r\n          }\r\n        });\r\n\r\n        this.loading = false;\r\n      });\r\n    } catch (error) {\r\n      console.error(error);\r\n      runInAction(() => (this.loading = false));\r\n    }\r\n  };\r\n\r\n  loadFollowings = async (predicate: string) => {\r\n    this.loadingFollowings = true;\r\n\r\n    try {\r\n      const following = await agent.Profiles.listFollowing(\r\n        this.profile!.displayName.toLowerCase(),\r\n        predicate\r\n      );\r\n\r\n      runInAction(() => {\r\n        this.followings = following;\r\n        this.loadingFollowings = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => (this.loadingFollowings = false));\r\n    }\r\n  };\r\n\r\n  loadUserActivities = async (username: string, predicate?: string) => {\r\n    this.loadingActivities = true;\r\n    try {\r\n      const activities = await agent.Profiles.listActivities(username, predicate!);\r\n      runInAction(() => {\r\n        this.userActivities = activities;\r\n        this.loadingActivities = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => {\r\n        this.loadingActivities = false;\r\n      });\r\n    }\r\n  };\r\n}\r\n","import { makeAutoObservable, runInAction } from \"mobx\";\r\nimport { StaticRouter } from \"react-router-dom\";\r\nimport { history } from \"../..\";\r\nimport agent from \"../api/agent\";\r\nimport { User, UserFormValues } from \"../models/user\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class UserStore {\r\n  user: User | null = null;\r\n  fbAccessToken: string | null = null;\r\n  fbLoading = false;\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  get isLoggedIn() {\r\n    return !!this.user;\r\n  }\r\n\r\n  login = async (creds: UserFormValues) => {\r\n    try {\r\n      const user = await agent.Account.login(creds);\r\n      store.commonStore.setToken(user.token);\r\n      runInAction(() => (this.user = user));\r\n      history.push(\"/activities\");\r\n      store.modalStore.closeModal();\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  logout = () => {\r\n    store.commonStore.setToken(null);\r\n    window.localStorage.removeItem(\"jwt\");\r\n    this.user = null;\r\n    history.push(\"/\");\r\n  };\r\n\r\n  getUser = async () => {\r\n    try {\r\n      const user = await agent.Account.current();\r\n      runInAction(() => (this.user = user));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  register = async (creds: UserFormValues) => {\r\n    try {\r\n      const user = await agent.Account.register(creds);\r\n      store.commonStore.setToken(user.token);\r\n      runInAction(() => (this.user = user));\r\n      history.push(\"/activities\");\r\n      store.modalStore.closeModal();\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  setImage = (image: string) => {\r\n    if (this.user) this.user.image = image;\r\n  };\r\n\r\n  getFacebookLoginStatus = async () => {\r\n    window.FB.getLoginStatus((response) => {\r\n      if (response.status === \"connected\") {\r\n        this.fbAccessToken = response.authResponse.accessToken;\r\n      }\r\n    });\r\n  };\r\n\r\n  facebookLogin = () => {\r\n    this.fbLoading = true;\r\n\r\n    const apiLogin = (accessToken: string) => {\r\n      agent.Account.fbLogin(accessToken)\r\n        .then((user) => {\r\n          store.commonStore.setToken(user.token);\r\n          runInAction(() => {\r\n            this.user = user;\r\n            this.fbLoading = false;\r\n          });\r\n\r\n          history.push(\"/activities\");\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n          runInAction(() => (this.fbLoading = false));\r\n        });\r\n    };\r\n\r\n    if (this.fbAccessToken) {\r\n      apiLogin(this.fbAccessToken);\r\n    } else {\r\n      window.FB.login(\r\n        (response) => {\r\n          apiLogin(response.authResponse.accessToken);\r\n        },\r\n        { scope: \"public_profile,email\" }\r\n      );\r\n    }\r\n  };\r\n}\r\n","import { createContext, useContext } from \"react\";\r\nimport ActivityStore from \"./activityStore\";\r\nimport CommentStore from \"./commentStore\";\r\nimport CommonStore from \"./commonStore\";\r\nimport ModalStore from \"./modalStore\";\r\nimport ProfileStore from \"./profileStore\";\r\nimport UserStore from \"./userStore\";\r\n\r\ninterface Store {\r\n  activityStore: ActivityStore;\r\n  commonStore: CommonStore;\r\n  userStore: UserStore;\r\n  modalStore: ModalStore;\r\n  profileStore: ProfileStore;\r\n  commentStore: CommentStore;\r\n}\r\n\r\nexport const store: Store = {\r\n  activityStore: new ActivityStore(),\r\n  commonStore: new CommonStore(),\r\n  userStore: new UserStore(),\r\n  modalStore: new ModalStore(),\r\n  profileStore: new ProfileStore(),\r\n  commentStore: new CommentStore(),\r\n};\r\n\r\nexport const StoreContext = createContext(store);\r\n\r\nexport const useStore = () => {\r\n  return useContext(StoreContext);\r\n};\r\n","import { makeAutoObservable, reaction } from \"mobx\";\r\nimport { ServerError } from \"../models/serverError\";\r\n\r\nexport default class CommonStore {\r\n  error: ServerError | null = null;\r\n  token: string | null = window.localStorage.getItem(\"jwt\");\r\n  appLoaded = false;\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n\r\n    reaction(\r\n      () => this.token,\r\n      (token) => {\r\n        if (token) {\r\n          window.localStorage.setItem(\"jwt\", token);\r\n        } else {\r\n          window.localStorage.removeItem(\"jwt\");\r\n        }\r\n      }\r\n    );\r\n  }\r\n  setServerError = (error: ServerError) => {\r\n    this.error = error;\r\n  };\r\n\r\n  setToken = (token: string | null) => {\r\n    this.token = token;\r\n  };\r\n\r\n  setAppLoaded = () => {\r\n    this.appLoaded = true;\r\n  };\r\n}\r\n","import { makeAutoObservable } from \"mobx\";\r\n\r\ninterface Modal {\r\n  open: boolean;\r\n  body: JSX.Element | null;\r\n}\r\n\r\nexport default class ModalStore {\r\n  modal: Modal = {\r\n    open: false,\r\n    body: null,\r\n  };\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  openModal = (content: JSX.Element) => {\r\n    this.modal.open = true;\r\n    this.modal.body = content;\r\n  };\r\n\r\n  closeModal = () => {\r\n    this.modal.open = false;\r\n    this.modal.body = null;\r\n  };\r\n}\r\n","import { HubConnection, HubConnectionBuilder, LogLevel } from \"@microsoft/signalr\";\r\nimport { makeAutoObservable, runInAction } from \"mobx\";\r\nimport { ChatComment } from \"../models/comment\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class CommentStore {\r\n  comments: ChatComment[] = [];\r\n  hubConnection: HubConnection | null = null;\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  createHubConnection = (activityId: string) => {\r\n    if (store.activityStore.selectedActivity) {\r\n      this.hubConnection = new HubConnectionBuilder()\r\n        .withUrl(process.env.REACT_APP_CHAT_URL + \"?activityId=\" + activityId, {\r\n          accessTokenFactory: () => store.userStore.user?.token!,\r\n        })\r\n        .withAutomaticReconnect()\r\n        .configureLogging(LogLevel.Information)\r\n        .build();\r\n\r\n      this.hubConnection\r\n        .start()\r\n        .catch((error) => console.log(\"Error establishing the connection\", error));\r\n\r\n      this.hubConnection.on(\"LoadComments\", (comments: ChatComment[]) => {\r\n        runInAction(() => {\r\n          comments.forEach((comment) => {\r\n            comment.createdAt = new Date(comment.createdAt + \"Z\");\r\n          });\r\n          this.comments = comments;\r\n        });\r\n      });\r\n\r\n      this.hubConnection.on(\"ReceiveComment\", (comment: ChatComment) => {\r\n        runInAction(() => {\r\n          comment.createdAt = new Date(comment.createdAt);\r\n          this.comments.unshift(comment);\r\n        });\r\n      });\r\n    }\r\n  };\r\n\r\n  stopHubConnection = () => {\r\n    this.hubConnection?.stop().catch((error) => console.log(\"Error stopping connection\", error));\r\n  };\r\n\r\n  clearComments = () => {\r\n    this.comments = [];\r\n    this.stopHubConnection();\r\n  };\r\n\r\n  addComment = async (values: any) => {\r\n    values.activityId = store.activityStore.selectedActivity?.id;\r\n\r\n    try {\r\n      await this.hubConnection?.invoke(\"SendComment\", values);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n}\r\n","import { observer } from \"mobx-react-lite\";\r\nimport Calendar from \"react-calendar\";\r\nimport { Header, Menu } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../../../app/stores/store\";\r\n\r\nconst ActivityFilters = () => {\r\n  const {\r\n    activityStore: { predicate, setPredicate },\r\n  } = useStore();\r\n  return (\r\n    <>\r\n      <Menu vertical size=\"large\" style={{ width: \"100%\", marginTop: 25 }}>\r\n        <Header icon=\"filter\" attached color=\"teal\" content=\"Filters\" />\r\n        <Menu.Item\r\n          content=\"All Activities\"\r\n          active={predicate.has(\"all\")}\r\n          onClick={() => setPredicate(\"all\", \"true\")}\r\n        />\r\n        <Menu.Item\r\n          content=\"I'm going\"\r\n          active={predicate.has(\"isGoing\")}\r\n          onClick={() => setPredicate(\"isGoing\", \"true\")}\r\n        />\r\n        <Menu.Item\r\n          content=\"I'm hosting\"\r\n          active={predicate.has(\"isHost\")}\r\n          onClick={() => setPredicate(\"isHost\", \"true\")}\r\n        />\r\n      </Menu>\r\n      <Header />\r\n      <Calendar\r\n        onChange={(date) => setPredicate(\"startDate\", date as Date)}\r\n        value={predicate.get(\"startDate\" || new Date())}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default observer(ActivityFilters);\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { SyntheticEvent } from \"react\";\r\nimport { Button, Reveal } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../app/models/profile\";\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\n\r\nconst FollowButton = ({ profile }: Props) => {\r\n  const { profileStore, userStore } = useStore();\r\n  const { updateFollowing, loading } = profileStore;\r\n\r\n  if (userStore.user?.displayName.toLowerCase() === profile.username) return null;\r\n\r\n  function handleFollow(e: SyntheticEvent, username: string) {\r\n    e.preventDefault();\r\n    profile.following ? updateFollowing(username, false) : updateFollowing(username, true);\r\n  }\r\n\r\n  return (\r\n    <Reveal animated=\"move\">\r\n      <Reveal.Content visible style={{ width: \"100%\" }}>\r\n        <Button fluid color=\"teal\" content={profile.following ? \"Following\" : \"Follow\"} />\r\n      </Reveal.Content>\r\n      <Reveal.Content hidden style={{ width: \"100%\" }}>\r\n        <Button\r\n          fluid\r\n          basic\r\n          color={profile.following ? \"red\" : \"green\"}\r\n          content={profile.following ? \"Unfollow\" : \"Follow\"}\r\n          loading={loading}\r\n          onClick={(e) => handleFollow(e, profile.username)}\r\n        />\r\n      </Reveal.Content>\r\n    </Reveal>\r\n  );\r\n};\r\n\r\nexport default observer(FollowButton);\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Card, Icon, Image } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../app/models/profile\";\r\nimport FollowButton from \"./FollowButton\";\r\n\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\n\r\nconst ProfileCard = ({ profile }: Props) => {\r\n  return (\r\n    <Card as={Link} to={`/profiles/${profile.username}`}>\r\n      <Image src={profile.image || \"/assets/user.png\"} />\r\n      <Card.Content>\r\n        <Card.Header>{profile.displayName}</Card.Header>\r\n        <Card.Description>Bio goes here</Card.Description>\r\n      </Card.Content>\r\n      <Card.Content extra>\r\n        <Icon name=\"user\"> {profile.followersCount} followers</Icon>\r\n      </Card.Content>\r\n      <FollowButton profile={profile} />\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default observer(ProfileCard);\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Image, List, Popup } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../../../app/models/profile\";\r\nimport ProfileCard from \"../../../profiles/ProfileCard\";\r\n\r\ninterface Props {\r\n  attendees: Profile[];\r\n}\r\nconst ActivityListItemAttendee = ({ attendees }: Props) => {\r\n  const styles = {\r\n    borderColor: \"orange\",\r\n    borderWidth: 3,\r\n  };\r\n  return (\r\n    <List horizontal>\r\n      {attendees.map((attendee) => (\r\n        <Popup\r\n          hoverable\r\n          key={attendee.username}\r\n          trigger={\r\n            <List.Item key={attendee.username} as={Link} to={`/profiles/${attendee.username}`}>\r\n              <Image\r\n                size=\"mini\"\r\n                circular\r\n                src={attendee.image || \"/assets/user.png\"}\r\n                style={attendee.following ? styles : null}\r\n              />\r\n            </List.Item>\r\n          }\r\n        >\r\n          <Popup.Content>\r\n            <ProfileCard profile={attendee} />\r\n          </Popup.Content>\r\n        </Popup>\r\n      ))}\r\n    </List>\r\n  );\r\n};\r\n\r\nexport default observer(ActivityListItemAttendee);\r\n","import { format } from \"date-fns\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Icon, Item, Label, Segment } from \"semantic-ui-react\";\r\nimport { Activity } from \"../../../../app/models/activity\";\r\nimport ActivityListItemAttendee from \"../activityListItemAttendee/ActivityListItemAttendee\";\r\n\r\ninterface Props {\r\n  activity: Activity;\r\n}\r\n\r\nconst ActivityListItem = ({ activity }: Props) => {\r\n  return (\r\n    <Segment.Group>\r\n      <Segment>\r\n        {activity.isCancelled && (\r\n          <Label attached=\"top\" color=\"red\" content=\"Cancelled\" style={{ textAlingn: \"center\" }} />\r\n        )}\r\n        <Item.Group>\r\n          <Item>\r\n            <Item.Image\r\n              style={{ marginBottom: 3 }}\r\n              size=\"tiny\"\r\n              circular\r\n              src={activity.host?.image || \"/assets/user.png\"}\r\n            />\r\n            <Item.Content>\r\n              <Item.Header as={Link} to={`/activities/${activity.id}`}>\r\n                {activity.title}\r\n              </Item.Header>\r\n              <Item.Description>\r\n                Hosted By{\" \"}\r\n                <Link to={`/profiles/${activity.hostUsername}`}>{activity.host?.displayName}</Link>\r\n              </Item.Description>\r\n              {activity.isHost && (\r\n                <Item.Description>\r\n                  <Label basic color=\"orange\">\r\n                    You are hosting this event\r\n                  </Label>\r\n                </Item.Description>\r\n              )}\r\n              {activity.isGoing && !activity.isHost && (\r\n                <Item.Description>\r\n                  <Label basic color=\"green\">\r\n                    You are going to this event\r\n                  </Label>\r\n                </Item.Description>\r\n              )}\r\n            </Item.Content>\r\n          </Item>\r\n        </Item.Group>\r\n      </Segment>\r\n      <Segment>\r\n        <span>\r\n          <Icon name=\"clock\" />\r\n          {format(activity.date!, \"dd MM yyyy h:mm aa\")}\r\n          <Icon name=\"marker\" />\r\n          {activity.venue}\r\n        </span>\r\n      </Segment>\r\n      <Segment secondary>\r\n        <ActivityListItemAttendee attendees={activity.attendees!} />\r\n      </Segment>\r\n      <Segment clearing>\r\n        <span>{activity.description}</span>\r\n        <Button\r\n          as={Link}\r\n          to={`/activities/${activity.id}`}\r\n          color=\"teal\"\r\n          floated=\"right\"\r\n          content=\"view\"\r\n        />\r\n      </Segment>\r\n    </Segment.Group>\r\n  );\r\n};\r\n\r\nexport default ActivityListItem;\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { Fragment } from \"react\";\r\nimport { Header } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../../../app/stores/store\";\r\nimport ActivityListItem from \"../activityListItem/ActivityListItem\";\r\n\r\nconst ActivityList = () => {\r\n  const { activityStore } = useStore();\r\n  const { groupedActivities } = activityStore;\r\n\r\n  return (\r\n    <>\r\n      {groupedActivities.map(([group, activities]) => (\r\n        <Fragment key={group}>\r\n          <Header sub color=\"teal\">\r\n            {group}\r\n          </Header>\r\n          {activities.map((activity) => (\r\n            <ActivityListItem key={activity.id} activity={activity} />\r\n          ))}\r\n        </Fragment>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default observer(ActivityList);\r\n","import React, { Fragment } from \"react\";\r\nimport { Placeholder, Segment, Button } from \"semantic-ui-react\";\r\n\r\nconst ActivityListItemPlaceholder = () => {\r\n  return (\r\n    <Fragment>\r\n      <Placeholder fluid style={{ marginTop: 25 }}>\r\n        <Segment.Group>\r\n          <Segment style={{ minHeight: 110 }}>\r\n            <Placeholder>\r\n              <Placeholder.Header image>\r\n                <Placeholder.Line />\r\n                <Placeholder.Line />\r\n              </Placeholder.Header>\r\n              <Placeholder.Paragraph>\r\n                <Placeholder.Line />\r\n              </Placeholder.Paragraph>\r\n            </Placeholder>\r\n          </Segment>\r\n          <Segment>\r\n            <Placeholder>\r\n              <Placeholder.Line />\r\n              <Placeholder.Line />\r\n            </Placeholder>\r\n          </Segment>\r\n          <Segment secondary style={{ minHeight: 70 }} />\r\n          <Segment clearing>\r\n            <Button disabled color=\"blue\" floated=\"right\" content=\"View\" />\r\n          </Segment>\r\n        </Segment.Group>\r\n      </Placeholder>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ActivityListItemPlaceholder;\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport InfiniteScroll from \"react-infinite-scroller\";\r\nimport { Grid, Loader } from \"semantic-ui-react\";\r\nimport { PagingParams } from \"../../../../app/models/pagination\";\r\nimport { useStore } from \"../../../../app/stores/store\";\r\nimport ActivityFilters from \"../activityFilters/ActivityFilters\";\r\nimport ActivityList from \"../activityList/ActivityList\";\r\nimport ActivityListItemPlaceholder from \"../activityListItemPlaceholder/ActivityListItemPlaceholder\";\r\n\r\nconst ActivityDashboard = () => {\r\n  const { activityStore } = useStore();\r\n  const { loadActivities, activityRegistry, setPagingParams, pagination } = activityStore;\r\n  const [loadingNext, setLoadingNext] = useState(false);\r\n\r\n  function handleGetNext() {\r\n    setLoadingNext(true);\r\n    setPagingParams(new PagingParams(pagination!.currentPage + 1));\r\n    loadActivities().then(() => setLoadingNext(false));\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (activityRegistry.size <= 1) {\r\n      loadActivities();\r\n    }\r\n  }, [activityRegistry.size, loadActivities]);\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width=\"10\">\r\n        {activityStore.loadingInitial && !loadingNext ? (\r\n          <>\r\n            <ActivityListItemPlaceholder />\r\n            <ActivityListItemPlaceholder />\r\n          </>\r\n        ) : (\r\n          <InfiniteScroll\r\n            pageStart={0}\r\n            loadMore={handleGetNext}\r\n            hasMore={!loadingNext && !!pagination && pagination.currentPage < pagination.totalPages}\r\n            initialLoad={false}\r\n          >\r\n            <ActivityList />\r\n          </InfiniteScroll>\r\n        )}\r\n      </Grid.Column>\r\n      <Grid.Column width=\"6\">\r\n        <ActivityFilters />\r\n      </Grid.Column>\r\n      <Grid.Column width={10}>\r\n        <Loader active={loadingNext} />\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n};\r\nexport default observer(ActivityDashboard);\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  Container,\r\n  Dropdown,\r\n  DropdownItem,\r\n  DropdownMenu,\r\n  Image,\r\n  Menu,\r\n} from \"semantic-ui-react\";\r\nimport { useStore } from \"../../stores/store\";\r\n\r\nconst NavBar = () => {\r\n  const {\r\n    userStore: { user, logout },\r\n  } = useStore();\r\n\r\n  return (\r\n    <Menu inverted fixed=\"top\">\r\n      <Container>\r\n        <Menu.Item as={NavLink} to=\"/\" exact header>\r\n          <img src=\"/assets/logo.png\" alt=\"logo\" style={{ marginRight: \"10px\" }} />\r\n          Reactivities\r\n        </Menu.Item>\r\n        <Menu.Item name=\"Activities\" as={NavLink} to=\"/activities\" />\r\n        <Menu.Item name=\"Errors\" as={NavLink} to=\"/errors\" />\r\n        <Menu.Item>\r\n          <Button as={NavLink} to=\"/createActivity\" positive content=\"Create Activity\" />\r\n        </Menu.Item>\r\n        <Menu.Item>\r\n          <Image src={user?.image || \"/assets/user.png\"} avatar spaced=\"right\" />\r\n          <Dropdown pointing=\"top left\" text={user?.displayName}>\r\n            <DropdownMenu>\r\n              <DropdownItem\r\n                as={Link}\r\n                to={`profiles/${user?.displayName.toLowerCase()}`}\r\n                text=\"My Profile\"\r\n                icon=\"user\"\r\n              />\r\n              <DropdownItem onClick={logout} text=\"logout\" icon=\"power\" />\r\n            </DropdownMenu>\r\n          </Dropdown>\r\n        </Menu.Item>\r\n      </Container>\r\n    </Menu>\r\n  );\r\n};\r\n\r\nexport default observer(NavBar);\r\n","import { useField } from \"formik\";\r\nimport React from \"react\";\r\nimport { Form, Label } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n  placeholder: string;\r\n  type?: string;\r\n  name: string;\r\n  label?: string;\r\n}\r\n\r\nconst CustomTextInput = (props: Props) => {\r\n  const [field, meta] = useField(props.name);\r\n\r\n  return (\r\n    <Form.Field error={meta.touched && !!meta.error}>\r\n      <label>{props.label}</label>\r\n      <input {...field} {...props} />\r\n      {meta.touched && meta.error ? (\r\n        <Label basic color=\"red\">\r\n          {meta.error}\r\n        </Label>\r\n      ) : null}\r\n    </Form.Field>\r\n  );\r\n};\r\n\r\nexport default CustomTextInput;\r\n","import { ErrorMessage, Form, Formik } from \"formik\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Button, Header, Label } from \"semantic-ui-react\";\r\nimport CustomTextInput from \"../../../app/common/form/customeTextInput/CustomTextInput\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\n\r\nconst LoginForm = () => {\r\n  const { userStore } = useStore();\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{ email: \"\", password: \"\", error: null }}\r\n      onSubmit={(values, { setErrors }) =>\r\n        userStore\r\n          .login(values)\r\n          .catch((error) => setErrors({ error: \"Invalid email or password\" }))\r\n      }\r\n    >\r\n      {({ handleSubmit, isSubmitting, errors }) => (\r\n        <Form className=\"ui form\" onSubmit={handleSubmit} autoComplete=\"off\">\r\n          <Header\r\n            as=\"h2\"\r\n            content=\"Login to Reactivities\"\r\n            color=\"teal\"\r\n            textAlign=\"center\"\r\n          />\r\n          <CustomTextInput name=\"email\" placeholder=\"email\" />\r\n          <CustomTextInput\r\n            name=\"password\"\r\n            placeholder=\"Password\"\r\n            type=\"password\"\r\n          />\r\n          <ErrorMessage\r\n            name=\"error\"\r\n            render={() => (\r\n              <Label\r\n                style={{ marginBottom: 10 }}\r\n                basic\r\n                color=\"red\"\r\n                content={errors.error}\r\n              />\r\n            )}\r\n          />\r\n          <Button\r\n            loading={isSubmitting}\r\n            positive\r\n            content=\"Login\"\r\n            type=\"submit\"\r\n            fluid\r\n          />\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default observer(LoginForm);\r\n","import React from \"react\";\r\nimport { Message } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n  errors: any;\r\n}\r\n\r\nconst ValidationErrors = ({ errors }: Props) => {\r\n  return (\r\n    <Message>\r\n      {errors && (\r\n        <Message.List>\r\n          {errors.map((err: any, i: any) => (\r\n            <Message.Item key={i}>{err}</Message.Item>\r\n          ))}\r\n        </Message.List>\r\n      )}\r\n    </Message>\r\n  );\r\n};\r\n\r\nexport default ValidationErrors;\r\n","import { ErrorMessage, Form, Formik } from \"formik\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Button, Header } from \"semantic-ui-react\";\r\nimport CustomTextInput from \"../../../app/common/form/customeTextInput/CustomTextInput\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport * as Yup from \"yup\";\r\nimport ValidationErrors from \"../../errors/ValidationErrors\";\r\n\r\nconst RegisterForm = () => {\r\n  const { userStore } = useStore();\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        displayName: \"\",\r\n        userName: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        error: null,\r\n      }}\r\n      onSubmit={(values, { setErrors }) =>\r\n        userStore.register(values).catch((error) => setErrors({ error }))\r\n      }\r\n      validationSchema={Yup.object({\r\n        displayName: Yup.string().required(),\r\n        userName: Yup.string().required(),\r\n        email: Yup.string().required().email(),\r\n        password: Yup.string().required(),\r\n      })}\r\n    >\r\n      {({ handleSubmit, isSubmitting, errors, isValid, dirty }) => (\r\n        <Form\r\n          className=\"ui form error\"\r\n          onSubmit={handleSubmit}\r\n          autoComplete=\"off\"\r\n        >\r\n          <Header\r\n            as=\"h2\"\r\n            content=\"Sign up to Reactivities\"\r\n            color=\"teal\"\r\n            textAlign=\"center\"\r\n          />\r\n          <CustomTextInput name=\"displayName\" placeholder=\"Display Name\" />\r\n          <CustomTextInput name=\"userName\" placeholder=\"User Name\" />\r\n          <CustomTextInput name=\"email\" placeholder=\"email\" />\r\n          <CustomTextInput\r\n            name=\"password\"\r\n            placeholder=\"Password\"\r\n            type=\"password\"\r\n          />\r\n          <ErrorMessage\r\n            name=\"error\"\r\n            render={() => <ValidationErrors errors={errors.error} />}\r\n          />\r\n          <Button\r\n            disabled={!isValid || !dirty || isSubmitting}\r\n            loading={isSubmitting}\r\n            positive\r\n            content=\"Register\"\r\n            type=\"submit\"\r\n            fluid\r\n          />\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default observer(RegisterForm);\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Container, Header, Segment, Image, Button, Divider } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport UserStore from \"../../../app/stores/userStore\";\r\nimport LoginForm from \"../../users/loginForm/LoginForm\";\r\nimport RegisterForm from \"../../users/registerForm/RegisterForm\";\r\n\r\nconst HomePage = () => {\r\n  const { userStore, modalStore } = useStore();\r\n\r\n  return (\r\n    <Segment inverted textAlign=\"center\" vertical className=\"masthead\">\r\n      <Container text>\r\n        <Header as=\"h1\" inverted>\r\n          <Image size=\"massive\" src=\"/assets/logo.png\" alt=\"logo\" style={{ marginBottom: 12 }} />\r\n        </Header>\r\n        {userStore.isLoggedIn ? (\r\n          <>\r\n            <Header as=\"h2\" inverted content=\"Welcome to Reactivities\" />\r\n            <Button as={Link} to=\"/activities\" size=\"huge\" inverted>\r\n              Go to Activities!\r\n            </Button>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Button onClick={() => modalStore.openModal(<LoginForm />)} size=\"huge\" inverted>\r\n              Login!\r\n            </Button>\r\n            <Button onClick={() => modalStore.openModal(<RegisterForm />)} size=\"huge\" inverted>\r\n              Register\r\n            </Button>\r\n            <Divider horizontal inverted>\r\n              OR\r\n            </Divider>\r\n            <Button\r\n              loading={userStore.fbLoading}\r\n              size=\"huge\"\r\n              inverted\r\n              color=\"facebook\"\r\n              content=\"Login with Facebook\"\r\n              onClick={userStore.facebookLogin}\r\n            />\r\n          </>\r\n        )}\r\n      </Container>\r\n    </Segment>\r\n  );\r\n};\r\n\r\nexport default observer(HomePage);\r\n","import React from \"react\";\r\nimport { Dimmer, Loader } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n  inverted?: boolean;\r\n  content?: string;\r\n}\r\n\r\nconst LoadingComponent = ({\r\n  inverted = true,\r\n  content = \"Loading...\",\r\n}: Props) => {\r\n  return (\r\n    <Dimmer active={true} inverted={inverted}>\r\n      <Loader content={content} />\r\n    </Dimmer>\r\n  );\r\n};\r\n\r\nexport default LoadingComponent;\r\n","import { useField } from \"formik\";\r\nimport React from \"react\";\r\nimport { Form, Label } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n  placeholder: string;\r\n  name: string;\r\n  rows: number;\r\n  label?: string;\r\n}\r\n\r\nconst CustomTextArea = (props: Props) => {\r\n  const [field, meta] = useField(props.name);\r\n\r\n  return (\r\n    <Form.Field error={meta.touched && !!meta.error}>\r\n      <label>{props.label}</label>\r\n      <textarea {...field} {...props} />\r\n      {meta.touched && meta.error ? (\r\n        <Label basic color=\"red\">\r\n          {meta.error}\r\n        </Label>\r\n      ) : null}\r\n    </Form.Field>\r\n  );\r\n};\r\n\r\nexport default CustomTextArea;\r\n","import { useField } from \"formik\";\r\nimport React from \"react\";\r\nimport { Form, Label, Select } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n  placeholder: string;\r\n  name: string;\r\n  options: any;\r\n  label?: string;\r\n}\r\n\r\nconst CustomSelectInput = (props: Props) => {\r\n  const [field, meta, helpers] = useField(props.name);\r\n\r\n  return (\r\n    <Form.Field error={meta.touched && !!meta.error}>\r\n      <label>{props.label}</label>\r\n      <Select\r\n        clearable\r\n        options={props.options}\r\n        value={field.value || null}\r\n        onChange={(e, d) => helpers.setValue(d.value)}\r\n        onBlur={() => helpers.setTouched(true)}\r\n        placeholder={props.placeholder}\r\n      ></Select>\r\n      {meta.touched && meta.error ? (\r\n        <Label basic color=\"red\">\r\n          {meta.error}\r\n        </Label>\r\n      ) : null}\r\n    </Form.Field>\r\n  );\r\n};\r\n\r\nexport default CustomSelectInput;\r\n","export const categoryOptions = [\r\n  {\r\n    text: \"Drinks\",\r\n    value: \"drinks\",\r\n  },\r\n  { text: \"Culture\", value: \"culture\" },\r\n  { text: \"Film\", value: \"film\" },\r\n  { text: \"Food\", value: \"food\" },\r\n  { text: \"Music\", value: \"music\" },\r\n  { text: \"Travel\", value: \"Travel\" },\r\n];\r\n","import { useField } from \"formik\";\r\nimport React from \"react\";\r\nimport { Form, Label } from \"semantic-ui-react\";\r\nimport DatePicker, { ReactDatePickerProps } from \"react-datepicker\";\r\n\r\nconst CustomDateInput = (props: Partial<ReactDatePickerProps>) => {\r\n  const [field, meta, helpers] = useField(props.name!);\r\n\r\n  return (\r\n    <Form.Field error={meta.touched && !!meta.error}>\r\n      <DatePicker\r\n        {...field}\r\n        {...props}\r\n        selected={(field.value && new Date(field.value)) || null}\r\n        onChange={(value) => helpers.setValue(value)}\r\n      />\r\n\r\n      {meta.touched && meta.error ? (\r\n        <Label basic color=\"red\">\r\n          {meta.error}\r\n        </Label>\r\n      ) : null}\r\n    </Form.Field>\r\n  );\r\n};\r\n\r\nexport default CustomDateInput;\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { Link, useHistory, useParams } from \"react-router-dom\";\r\nimport { Button, Header, Segment } from \"semantic-ui-react\";\r\nimport LoadingComponent from \"../../../../app/layout/loadingComponent/LoadingComponent\";\r\nimport { useStore } from \"../../../../app/stores/store\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport CustomTextInput from \"../../../../app/common/form/customeTextInput/CustomTextInput\";\r\nimport CustomTextArea from \"../../../../app/common/form/customTextArea/CustomTextArea\";\r\nimport CustomSelectInput from \"../../../../app/common/form/customSelectInput/CustomeSelectInput\";\r\nimport { categoryOptions } from \"../../../../app/common/form/options/CategoryOptions\";\r\nimport CustomDateInput from \"../../../../app/common/form/customDateInput/CustomDateInput\";\r\nimport { ActivityFormValues } from \"../../../../app/models/activity\";\r\n\r\nconst ActivityForm = () => {\r\n  const history = useHistory();\r\n  const { activityStore } = useStore();\r\n  const { createActivity, updateActivity, loadActivity, loadingInitial } =\r\n    activityStore;\r\n\r\n  const { id } = useParams<{ id: string }>();\r\n\r\n  const [activity, setActivity] = useState<ActivityFormValues>(\r\n    new ActivityFormValues()\r\n  );\r\n\r\n  const validationSchema = Yup.object({\r\n    title: Yup.string().required(\"Activity Title is required\"),\r\n    description: Yup.string().required(\"Activity Description is required\"),\r\n    category: Yup.string().required(),\r\n    date: Yup.string().required(\"Date is required\").nullable(),\r\n    city: Yup.string().required(),\r\n    venue: Yup.string().required(),\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (id)\r\n      loadActivity(id).then((activity) =>\r\n        setActivity(new ActivityFormValues(activity))\r\n      );\r\n  }, [id, loadActivity]);\r\n\r\n  const handleFormSubmit = (activity: ActivityFormValues) => {\r\n    if (!activity.id) {\r\n      const newActivity = {\r\n        ...activity,\r\n        id: uuid(),\r\n      };\r\n\r\n      createActivity(newActivity).then(() =>\r\n        history.push(`/activities/${newActivity.id}`)\r\n      );\r\n    } else {\r\n      updateActivity(activity).then(() =>\r\n        history.push(`/activities/${activity.id}`)\r\n      );\r\n    }\r\n  };\r\n\r\n  if (loadingInitial)\r\n    return <LoadingComponent content={\"Loading activity ...\"} />;\r\n  return (\r\n    <Segment clearing>\r\n      <Header content=\"Activity Details\" sub color=\"teal\" />\r\n      <Formik\r\n        validationSchema={validationSchema}\r\n        enableReinitialize\r\n        initialValues={activity}\r\n        onSubmit={(values) => handleFormSubmit(values)}\r\n      >\r\n        {({ handleSubmit, isValid, isSubmitting, dirty }) => (\r\n          <Form className=\"ui form\" onSubmit={handleSubmit} autoComplete=\"off\">\r\n            <CustomTextInput placeholder=\"Title\" name=\"title\" />\r\n            <CustomTextArea\r\n              rows={3}\r\n              placeholder=\"Description\"\r\n              name=\"description\"\r\n            />\r\n            <CustomSelectInput\r\n              options={categoryOptions}\r\n              placeholder=\"Category\"\r\n              name=\"category\"\r\n            />\r\n            <CustomDateInput\r\n              placeholderText=\"Date\"\r\n              name=\"date\"\r\n              showTimeSelect\r\n              timeCaption=\"time\"\r\n              dateFormat=\"MMMM d, yyyy h:mm aa\"\r\n            />\r\n            <Header content=\"Location Details\" sub color=\"teal\" />\r\n\r\n            <CustomTextInput placeholder=\"City\" name=\"city\" />\r\n            <CustomTextInput placeholder=\"Venue\" name=\"venue\" />\r\n            <Button\r\n              disabled={isSubmitting || !dirty || !isValid}\r\n              loading={isSubmitting}\r\n              floated=\"right\"\r\n              positive\r\n              type=\"submit\"\r\n              content=\"Submit\"\r\n            />\r\n            <Button\r\n              as={Link}\r\n              to=\"/activities\"\r\n              floated=\"right\"\r\n              type=\"button\"\r\n              content=\"Cancel\"\r\n            />\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Segment>\r\n  );\r\n};\r\n\r\nexport default observer(ActivityForm);\r\n","import { Formik, Form, Field, FieldProps } from \"formik\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Segment, Header, Comment, Loader } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../../../app/stores/store\";\r\nimport * as Yup from \"yup\";\r\nimport { formatDistanceToNow } from \"date-fns\";\r\ninterface Props {\r\n  activityId: string;\r\n}\r\n\r\nconst ActivityDetailedChat = ({ activityId }: Props) => {\r\n  const { commentStore } = useStore();\r\n\r\n  useEffect(() => {\r\n    if (activityId) {\r\n      commentStore.createHubConnection(activityId);\r\n    }\r\n\r\n    return () => {\r\n      commentStore.clearComments();\r\n    };\r\n  }, [commentStore, activityId]);\r\n\r\n  return (\r\n    <>\r\n      <Segment textAlign=\"center\" attached=\"top\" inverted color=\"teal\" style={{ border: \"none\" }}>\r\n        <Header>Chat about this event</Header>\r\n      </Segment>\r\n      <Segment attached clearing>\r\n        <Formik\r\n          initialValues={{ body: \"\" }}\r\n          validationSchema={Yup.object({\r\n            body: Yup.string().required(),\r\n          })}\r\n          onSubmit={(values, { resetForm }) =>\r\n            commentStore.addComment(values).then(() => resetForm())\r\n          }\r\n        >\r\n          {({ isSubmitting, isValid, handleSubmit }) => (\r\n            <Form className=\"ui form\">\r\n              <Field name=\"body\">\r\n                {(props: FieldProps) => (\r\n                  <div style={{ position: \"relative\" }}>\r\n                    <Loader active={isSubmitting} />\r\n                    <textarea\r\n                      placeholder=\"Enter your comment (Enter to submit, SHIFT + enter for new line)\"\r\n                      rows={2}\r\n                      {...props.field}\r\n                      onKeyPress={(e) => {\r\n                        if (e.key === \"Enter\" && e.shiftKey) {\r\n                          return;\r\n                        }\r\n\r\n                        if (e.key === \"Enter\" && !e.shiftKey) {\r\n                          e.preventDefault();\r\n                          isValid && handleSubmit();\r\n                        }\r\n                      }}\r\n                    ></textarea>\r\n                  </div>\r\n                )}\r\n              </Field>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n        <Comment.Group>\r\n          {commentStore.comments.map((comment) => (\r\n            <Comment key={comment.id}>\r\n              <Comment.Avatar src={comment.image || \"/assets/user.png\"} />\r\n              <Comment.Content>\r\n                <Comment.Author as={Link} to={`/profiles/${comment.username}`}>\r\n                  {comment.displayName}\r\n                </Comment.Author>\r\n                <Comment.Metadata>\r\n                  <div>{formatDistanceToNow(comment.createdAt)} ago</div>\r\n                </Comment.Metadata>\r\n                <Comment.Text style={{ whiteSpace: \"pre-wrap\" }}>{comment.body}</Comment.Text>\r\n              </Comment.Content>\r\n            </Comment>\r\n          ))}\r\n        </Comment.Group>\r\n      </Segment>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default observer(ActivityDetailedChat);\r\n","import { format } from \"date-fns\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Header, Item, Segment, Image, Label } from \"semantic-ui-react\";\r\nimport { Activity } from \"../../../../app/models/activity\";\r\nimport { useStore } from \"../../../../app/stores/store\";\r\n\r\nconst activityImageStyle = {\r\n  filter: \"brightness(30%)\",\r\n};\r\n\r\nconst activityImageTextStyle = {\r\n  position: \"absolute\",\r\n  bottom: \"5%\",\r\n  left: \"5%\",\r\n  width: \"100%\",\r\n  height: \"auto\",\r\n  color: \"white\",\r\n};\r\n\r\ninterface Props {\r\n  activity: Activity;\r\n}\r\n\r\nconst ActivityDetailedHeader = ({ activity }: Props) => {\r\n  const {\r\n    activityStore: { updateAttendance, loading, cancelActivityToggle },\r\n  } = useStore();\r\n\r\n  return (\r\n    <Segment.Group>\r\n      <Segment basic attached=\"top\" style={{ padding: \"0\" }}>\r\n        {activity.isCancelled && (\r\n          <Label\r\n            style={{ position: \"absolute\", zIndex: 1000, left: -14, top: 20 }}\r\n            ribbon\r\n            color=\"red\"\r\n            content=\"Cancelled\"\r\n          />\r\n        )}\r\n\r\n        <Image\r\n          src={`/assets/categoryImages/${activity.category}.jpg`}\r\n          fluid\r\n          style={activityImageStyle}\r\n        />\r\n        <Segment style={activityImageTextStyle} basic>\r\n          <Item.Group>\r\n            <Item>\r\n              <Item.Content>\r\n                <Header\r\n                  size=\"huge\"\r\n                  content={activity.title}\r\n                  style={{ color: \"white\" }}\r\n                />\r\n                <p>{format(activity.date!, \"dd MMM yyyy\")}</p>\r\n                <p>\r\n                  Hosted by{\" \"}\r\n                  <strong>\r\n                    <Link to={`/profiles/${activity.host?.username}`}>\r\n                      {activity.host?.displayName}\r\n                    </Link>{\" \"}\r\n                  </strong>\r\n                </p>\r\n              </Item.Content>\r\n            </Item>\r\n          </Item.Group>\r\n        </Segment>\r\n      </Segment>\r\n      <Segment clearing attached=\"bottom\">\r\n        {activity.isHost ? (\r\n          <>\r\n            <Button\r\n              color={activity.isCancelled ? \"green\" : \"red\"}\r\n              floated=\"left\"\r\n              basic\r\n              content={\r\n                activity.isCancelled\r\n                  ? \"Re-activate Activity\"\r\n                  : \"Cancel Activity\"\r\n              }\r\n              onClick={cancelActivityToggle}\r\n              loading={loading}\r\n            />\r\n\r\n            <Button\r\n              disabled={activity.isCancelled}\r\n              as={Link}\r\n              to={`/manage/${activity.id}`}\r\n              color=\"orange\"\r\n              floated=\"right\"\r\n            >\r\n              Manage Event\r\n            </Button>\r\n          </>\r\n        ) : activity.isGoing ? (\r\n          <Button loading={loading} onClick={updateAttendance}>\r\n            Cancel attendance\r\n          </Button>\r\n        ) : (\r\n          <Button\r\n            disabled={activity.isCancelled}\r\n            loading={loading}\r\n            onClick={updateAttendance}\r\n            color=\"teal\"\r\n          >\r\n            Join Activity\r\n          </Button>\r\n        )}\r\n      </Segment>\r\n    </Segment.Group>\r\n  );\r\n};\r\n\r\nexport default observer(ActivityDetailedHeader);\r\n","import { format } from \"date-fns\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Segment, Grid, Icon } from \"semantic-ui-react\";\r\nimport { Activity } from \"../../../../app/models/activity\";\r\n\r\ninterface Props {\r\n  activity: Activity;\r\n}\r\n\r\nconst ActivityDetailedInfo = ({ activity }: Props) => {\r\n  return (\r\n    <Segment.Group>\r\n      <Segment attached=\"top\">\r\n        <Grid>\r\n          <Grid.Column width={1}>\r\n            <Icon size=\"large\" color=\"teal\" name=\"info\" />\r\n          </Grid.Column>\r\n          <Grid.Column width={15}>\r\n            <p>{activity.description}</p>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Segment>\r\n      <Segment attached>\r\n        <Grid verticalAlign=\"middle\">\r\n          <Grid.Column width={1}>\r\n            <Icon name=\"calendar\" size=\"large\" color=\"teal\" />\r\n          </Grid.Column>\r\n          <Grid.Column width={15}>\r\n            <span>{format(activity.date!, \"dd MMM yyyy h:mm aa\")}</span>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Segment>\r\n      <Segment attached>\r\n        <Grid verticalAlign=\"middle\">\r\n          <Grid.Column width={1}>\r\n            <Icon name=\"marker\" size=\"large\" color=\"teal\" />\r\n          </Grid.Column>\r\n          <Grid.Column width={11}>\r\n            <span>\r\n              {activity.venue}, {activity.city}\r\n            </span>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Segment>\r\n    </Segment.Group>\r\n  );\r\n};\r\n\r\nexport default observer(ActivityDetailedInfo);\r\n","import React from \"react\";\r\nimport { Segment, List, Label, Item, Image } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Activity } from \"../../../../app/models/activity\";\r\n\r\ninterface Props {\r\n  activity: Activity;\r\n}\r\n\r\nconst ActivityDetailedSidebar = ({ activity: { attendees, host } }: Props) => {\r\n  if (!attendees) return null;\r\n  return (\r\n    <>\r\n      <Segment\r\n        textAlign=\"center\"\r\n        style={{ border: \"none\" }}\r\n        attached=\"top\"\r\n        secondary\r\n        inverted\r\n        color=\"teal\"\r\n      >\r\n        {attendees.length}\r\n        {attendees.length === 1 ? \"Person\" : \"People\"} going\r\n      </Segment>\r\n      <Segment attached>\r\n        <List relaxed divided>\r\n          {attendees.map((attendee) => (\r\n            <Item style={{ position: \"relative\" }} key={attendee.username}>\r\n              {attendee.username === host?.username && (\r\n                <Label\r\n                  style={{ position: \"absolute\" }}\r\n                  color=\"orange\"\r\n                  ribbon=\"right\"\r\n                >\r\n                  Host\r\n                </Label>\r\n              )}\r\n              <Image size=\"tiny\" src={attendee.image || \"/assets/user.png\"} />\r\n              <Item.Content verticalAlign=\"middle\">\r\n                <Item.Header as=\"h3\">\r\n                  <Link to={`/profiles/${attendee.username}`}>\r\n                    {attendee.displayName}\r\n                  </Link>\r\n                </Item.Header>\r\n                {attendee.following  && \r\n                <Item.Extra style={{ color: \"orange\" }}>Following</Item.Extra>}\r\n              </Item.Content>\r\n            </Item>\r\n          ))}\r\n        </List>\r\n      </Segment>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default observer(ActivityDetailedSidebar);\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nimport LoadingComponent from \"../../../../app/layout/loadingComponent/LoadingComponent\";\r\nimport { useStore } from \"../../../../app/stores/store\";\r\nimport ActivityDetailedChat from \"../activityDetailedChat/ActivityDetailedChat\";\r\nimport ActivityDetailedHeader from \"../activityDetailedHeader/ActivityDetailedHeader\";\r\nimport ActivityDetailedInfo from \"../activityDetailedInfo/ActivityDetailedInfo\";\r\nimport ActivityDetailedSidebar from \"../activityDetailedSidebar/ActivityDetailedSidebar\";\r\n\r\nconst ActivityDetails = () => {\r\n  const { activityStore } = useStore();\r\n  const {\r\n    selectedActivity: activity,\r\n    loadActivity,\r\n    loadingInitial,\r\n    clearSelectedActivity,\r\n  } = activityStore;\r\n\r\n  const { id } = useParams<{ id: string }>();\r\n\r\n  useEffect(() => {\r\n    if (id) loadActivity(id);\r\n    return () => clearSelectedActivity();\r\n  }, [id, loadActivity, clearSelectedActivity]);\r\n\r\n  if (loadingInitial || !activity) return <LoadingComponent />;\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width={10}>\r\n        <ActivityDetailedHeader activity={activity} />\r\n        <ActivityDetailedInfo activity={activity} />\r\n        <ActivityDetailedChat activityId={activity.id} />\r\n      </Grid.Column>\r\n      <Grid.Column width={6}>\r\n        <ActivityDetailedSidebar activity={activity!} />\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default observer(ActivityDetails);\r\n","import React from \"react\";\r\nimport { Button, Header, Segment } from \"semantic-ui-react\";\r\nimport axios from \"axios\";\r\nimport { useState } from \"react\";\r\nimport ValidationErrors from \"./ValidationErrors\";\r\n\r\nconst TestErrors = () => {\r\n  const baseUrl = process.env.REACT_APP_API_URL;\r\n\r\n  const [errors, setErrors] = useState(null);\r\n\r\n  function handleNotFound() {\r\n    axios.get(baseUrl + \"buggy/not-found\").catch((err) => console.log(err.response));\r\n  }\r\n\r\n  function handleBadRequest() {\r\n    axios.get(baseUrl + \"buggy/bad-request\").catch((err) => console.log(err.response));\r\n  }\r\n\r\n  function handleServerError() {\r\n    axios.get(baseUrl + \"buggy/server-error\").catch((err) => console.log(err.response));\r\n  }\r\n\r\n  function handleUnauthorised() {\r\n    axios.get(baseUrl + \"buggy/unauthorised\").catch((err) => console.log(err.response));\r\n  }\r\n\r\n  function handleBadGuid() {\r\n    axios.get(baseUrl + \"activities/notaguid\").catch((err) => console.log(err.response));\r\n  }\r\n\r\n  function handleValidationError() {\r\n    axios.post(baseUrl + \"activities\", {}).catch((err) => setErrors(err));\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Header as=\"h1\" content=\"Test Error component\" />\r\n      <Segment>\r\n        <Button.Group widths=\"7\">\r\n          <Button onClick={handleNotFound} content=\"Not Found\" basic primary />\r\n          <Button onClick={handleBadRequest} content=\"Bad Request\" basic primary />\r\n          <Button onClick={handleValidationError} content=\"Validation Error\" basic primary />\r\n          <Button onClick={handleServerError} content=\"Server Error\" basic primary />\r\n          <Button onClick={handleUnauthorised} content=\"Unauthorised\" basic primary />\r\n          <Button onClick={handleBadGuid} content=\"Bad Guid\" basic primary />\r\n        </Button.Group>\r\n      </Segment>\r\n      {errors && <ValidationErrors errors={errors} />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TestErrors;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Header, Icon, Segment } from \"semantic-ui-react\";\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <Segment placeholder>\r\n      <Header icon>\r\n        <Icon name=\"search\" />\r\n        Oops - we've looked everywhere and could not find this.\r\n      </Header>\r\n      <Segment.Inline>\r\n        <Button as={Link} to=\"/activities\" primary>\r\n          Return to activities Page\r\n        </Button>\r\n      </Segment.Inline>\r\n    </Segment>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Container, Header, Segment } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\nconst ServerError = () => {\r\n  const { commonStore } = useStore();\r\n  return (\r\n    <Container>\r\n      <Header as=\"h1\" content=\"Server Error\" />\r\n      <Header sub as=\"h5\" color=\"red\" content={commonStore.error?.message} />\r\n      {commonStore.error?.details && (\r\n        <Segment>\r\n          <Header as=\"h4\" content=\"Stack trace\" color=\"teal\" />\r\n          <code style={{ marginTop: \"10px\" }}>{commonStore.error.details}</code>\r\n        </Segment>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default observer(ServerError);\r\n","import { observer } from \"mobx-react-lite\";\r\nimport { Modal } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../../stores/store\";\r\n\r\nconst ModalContainer = () => {\r\n  const { modalStore } = useStore();\r\n\r\n  return (\r\n    <Modal\r\n      open={modalStore.modal.open}\r\n      onClose={modalStore.closeModal}\r\n      size=\"mini\"\r\n    >\r\n      <Modal.Content>{modalStore.modal.body}</Modal.Content>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default observer(ModalContainer);\r\n","import { format } from \"date-fns\";\r\nimport { link } from \"fs\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React, { SyntheticEvent, useEffect } from \"react\";\r\nimport { Card, Grid, Header, Image, Tab, TabProps } from \"semantic-ui-react\";\r\nimport { UserActivity } from \"../../app/models/profile\";\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\nconst panes = [\r\n  { menuItem: \"Future Events\", pane: { key: \"future\" } },\r\n  { menuItem: \"Past Events\", pane: { key: \"past\" } },\r\n  { menuItem: \"Hosting\", pane: { key: \"hosting\" } },\r\n];\r\n\r\nconst ProfileActivities = () => {\r\n  const { profileStore } = useStore();\r\n  const { loadUserActivities, profile, loadingActivities, userActivities } = profileStore;\r\n\r\n  useEffect(() => {\r\n    loadUserActivities(profile!.username);\r\n  }, [loadUserActivities, profile]);\r\n\r\n  const handleTabchange = (e: SyntheticEvent, data: TabProps) => {\r\n    loadUserActivities(profile!.username, panes[data.activeIndex as number].pane.key);\r\n  };\r\n\r\n  return (\r\n    <Tab.Pane loading={loadingActivities}>\r\n      <Grid>\r\n        <Grid.Column width={16}>\r\n          <Header floated=\"left\" icon=\"calendar\" content={\"Activities\"} />\r\n        </Grid.Column>\r\n        <Grid.Column width={16}>\r\n          <Tab\r\n            panes={panes}\r\n            menu={{ secondary: true, pointing: true }}\r\n            onTabChange={(e, data) => handleTabchange(e, data)}\r\n          />\r\n          <br />\r\n          <Card.Group itemsPerRow={4}>\r\n            {userActivities.map((activity: UserActivity) => (\r\n              <Card as={link} to={`/activities/${activity.id}`} key={activity.id}>\r\n                <Image\r\n                  src={`/assets/categoryImages/${activity.category}.jpg`}\r\n                  style={{ minHeight: 100, objectFit: \"cover\" }}\r\n                >\r\n                  <Card.Content>\r\n                    <Card.Header textAlign=\"center\">{activity.title}</Card.Header>\r\n                    <Card.Meta textAlign=\"center\">\r\n                      <div>{format(new Date(activity.date), \"do LLL\")}</div>\r\n                      <div>{format(new Date(activity.date), \"h:mm a\")}</div>\r\n                    </Card.Meta>\r\n                  </Card.Content>\r\n                </Image>\r\n              </Card>\r\n            ))}\r\n          </Card.Group>\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n};\r\n\r\nexport default observer(ProfileActivities);\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Card, Grid, Header, Tab } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport ProfileCard from \"./ProfileCard\";\r\n\r\nconst ProfileFollowings = () => {\r\n  const { profileStore } = useStore();\r\n  const { profile, followings, loadingFollowings, activeTab } = profileStore;\r\n\r\n  return (\r\n    <Tab.Pane loading={loadingFollowings}>\r\n      <Grid>\r\n        <Grid.Column>\r\n          <Header\r\n            floated=\"left\"\r\n            icon=\"user\"\r\n            content={\r\n              activeTab === 3\r\n                ? `People following ${profile?.displayName}`\r\n                : `People ${profile?.displayName} is following`\r\n            }\r\n          />\r\n        </Grid.Column>\r\n        <Grid.Column width={16}>\r\n          <Card.Group itemsPerRow={4}>\r\n            {followings.map((profile) => (\r\n              <ProfileCard key={profile.displayName} profile={profile} />\r\n            ))}\r\n          </Card.Group>\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n};\r\n\r\nexport default observer(ProfileFollowings);\r\n","import React from \"react\";\r\nimport \"cropperjs/dist/cropper.css\";\r\nimport { Cropper } from \"react-cropper\";\r\n\r\ninterface Props {\r\n  imagePreview: string;\r\n  setCropper: (cropper: Cropper) => void;\r\n}\r\n\r\nconst PhotoWidgetCropper = ({ imagePreview, setCropper }: Props) => {\r\n  return (\r\n    <Cropper\r\n      src={imagePreview}\r\n      style={{ height: 200, width: \"100%\" }}\r\n      initialAspectRatio={1}\r\n      aspectRatio={1}\r\n      preview={\".img-preview\"}\r\n      guides={false}\r\n      viewMode={1}\r\n      autoCropArea={1}\r\n      background={false}\r\n      onInitialized={(cropper) => setCropper(cropper)}\r\n    />\r\n  );\r\n};\r\n\r\nexport default PhotoWidgetCropper;\r\n","import React, { useCallback } from \"react\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { Header, Icon } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n  setFiles: (files: any) => void;\r\n}\r\n\r\nconst PhotoWidgetDropzone = ({ setFiles }: Props) => {\r\n  const dzStyles = {\r\n    border: \"dashed 3px #eee\",\r\n    borderColor: \"#eee\",\r\n    borderRadus: \"5px\",\r\n    paddingTop: \"30px\",\r\n    textAlign: \"center\" as \"center\",\r\n    height: 200,\r\n  };\r\n\r\n  const dzActive = {\r\n    borderColor: \"green\",\r\n  };\r\n\r\n  const onDrop = useCallback(\r\n    (acceptedFiles) => {\r\n      setFiles(\r\n        acceptedFiles.map((file: any) =>\r\n          Object.assign(file, {\r\n            preview: URL.createObjectURL(file),\r\n          })\r\n        )\r\n      );\r\n    },\r\n    [setFiles]\r\n  );\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\r\n\r\n  return (\r\n    <div {...getRootProps()} style={isDragActive ? { ...dzStyles, ...dzActive } : dzStyles}>\r\n      <input {...getInputProps()} />\r\n      <Icon name=\"upload\" size=\"huge\" />\r\n      <Header content=\"Drop image here\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PhotoWidgetDropzone;\r\n","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { Button, Grid, Header } from \"semantic-ui-react\";\r\nimport PhotoWidgetCropper from \"./PhotoWidgetCropper\";\r\nimport PhotoWidgetDropzone from \"./PhotoWidgetDropzone\";\r\n\r\ninterface Props {\r\n  loading: boolean;\r\n  uploadPhoto: (file: Blob) => void;\r\n}\r\n\r\nconst PhotoUploadWidget = ({ loading, uploadPhoto }: Props) => {\r\n  const [files, setFiles] = useState<any>([]);\r\n  const [cropper, setCropper] = useState<Cropper>();\r\n\r\n  function onCrop() {\r\n    if (cropper) {\r\n      cropper.getCroppedCanvas().toBlob((blob) => uploadPhoto(blob!));\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      files.forEach((file: any) => URL.revokeObjectURL(file.preview));\r\n    };\r\n  }, [files]);\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width={4}>\r\n        <Header sub color=\"teal\" content=\"Step 1 - Add Photo\" />\r\n        <PhotoWidgetDropzone setFiles={setFiles} />\r\n      </Grid.Column>\r\n      <Grid.Column width={1} />\r\n      <Grid.Column width={4}>\r\n        <Header sub color=\"teal\" content=\"Step 2 - Resize image\" />\r\n        {files && files.length > 0 && (\r\n          <PhotoWidgetCropper setCropper={setCropper} imagePreview={files[0].preview} />\r\n        )}\r\n      </Grid.Column>\r\n      <Grid.Column width={1} />\r\n      <Grid.Column width={4}>\r\n        <Header sub color=\"teal\" content=\"Step 3 - Preview & Upload\" />\r\n        {files && files.length > 0 && (\r\n          <Fragment>\r\n            <div className=\"img-preview\" style={{ minHeight: 200, overflow: \"hidden\" }} />\r\n            <Button.Group>\r\n              <Button loading={loading} onClick={onCrop} positive icon=\"check\" />\r\n              <Button disabled={loading} onClick={() => setFiles([])} icon=\"close\" />\r\n            </Button.Group>\r\n          </Fragment>\r\n        )}\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default PhotoUploadWidget;\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { SyntheticEvent, useState } from \"react\";\r\nimport { Button, Card, Grid, Header, Image, Tab } from \"semantic-ui-react\";\r\nimport PhotoUploadWidget from \"../../app/common/imageUpload/PhotoUploadWidget\";\r\nimport { Photo, Profile } from \"../../app/models/profile\";\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\n\r\nconst ProfilePhotos = ({ profile }: Props) => {\r\n  const {\r\n    profileStore: { isCurrentUser, uploadPhoto, uploading, loading, setMain, deletePhoto },\r\n  } = useStore();\r\n\r\n  const [addPhotoMode, setAddPhotoMode] = useState(false);\r\n  const [target, setTarget] = useState(\"\");\r\n\r\n  function handlePhotoUpload(file: Blob) {\r\n    uploadPhoto(file).then(() => setAddPhotoMode(false));\r\n  }\r\n\r\n  function handleSetMainPhoto(photo: Photo, e: SyntheticEvent<HTMLButtonElement>) {\r\n    setTarget(e.currentTarget.name);\r\n    setMain(photo);\r\n  }\r\n\r\n  function handleDeletePhoto(photo: Photo, e: SyntheticEvent<HTMLButtonElement>) {\r\n    setTarget(e.currentTarget.name);\r\n    deletePhoto(photo);\r\n  }\r\n\r\n  return (\r\n    <Tab.Pane>\r\n      <Grid>\r\n        <Grid.Column width={16}>\r\n          <Header floated=\"left\" icon=\"image\" content=\"Photos\" />\r\n          {isCurrentUser && (\r\n            <Button\r\n              floated=\"right\"\r\n              basic\r\n              content={addPhotoMode ? \"Cancel\" : \" Add Photot\"}\r\n              onClick={() => setAddPhotoMode(!addPhotoMode)}\r\n            />\r\n          )}\r\n        </Grid.Column>\r\n        <Grid.Column width={16}>\r\n          {addPhotoMode ? (\r\n            <PhotoUploadWidget uploadPhoto={handlePhotoUpload} loading={uploading} />\r\n          ) : (\r\n            <Card.Group itemsPerRow={5}>\r\n              {profile.photos?.map((photo) => (\r\n                <Card key={photo.id}>\r\n                  <Image src={photo.url} />\r\n\r\n                  {isCurrentUser && (\r\n                    <Button.Group fluid widths={2}>\r\n                      <Button\r\n                        basic\r\n                        color=\"green\"\r\n                        content=\"Main\"\r\n                        name={`main${photo.id}`}\r\n                        disabled={photo.isMain}\r\n                        loading={target === `main${photo.id}` && loading}\r\n                        onClick={(e) => handleSetMainPhoto(photo, e)}\r\n                      />\r\n                      <Button\r\n                        color=\"red\"\r\n                        icon=\"trash\"\r\n                        name={photo.id}\r\n                        loading={target === photo.id && loading}\r\n                        onClick={(e) => handleDeletePhoto(photo, e)}\r\n                        disabled={photo.isMain}\r\n                      />\r\n                    </Button.Group>\r\n                  )}\r\n                </Card>\r\n              ))}\r\n            </Card.Group>\r\n          )}\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n};\r\n\r\nexport default observer(ProfilePhotos);\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Tab } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../app/models/profile\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport ProfileActivities from \"./ProfileActivities\";\r\nimport ProfileFollowings from \"./profileFollowings\";\r\nimport ProfilePhotos from \"./ProfilePhotos\";\r\n\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\n\r\nconst ProfileContent = ({ profile }: Props) => {\r\n  const { profileStore } = useStore();\r\n\r\n  const panes = [\r\n    { menuItem: \"About\", render: () => <Tab.Pane>About Content</Tab.Pane> },\r\n    { menuItem: \"Photos\", render: () => <ProfilePhotos profile={profile} /> },\r\n    { menuItem: \"Events\", render: () => <ProfileActivities /> },\r\n    { menuItem: \"Followers\", render: () => <ProfileFollowings /> },\r\n    { menuItem: \"Following\", render: () => <ProfileFollowings /> },\r\n  ];\r\n\r\n  return (\r\n    <Tab\r\n      menu={{ fluid: true, vertical: true }}\r\n      menuPosition=\"right\"\r\n      panes={panes}\r\n      onTabChange={(e, data) => profileStore.setActiveTab(data.activeIndex)}\r\n    />\r\n  );\r\n};\r\n\r\nexport default observer(ProfileContent);\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Divider, Grid, Header, Item, Segment, Statistic } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../app/models/profile\";\r\nimport FollowButton from \"./FollowButton\";\r\n\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\n\r\nconst ProfileHeader = ({ profile }: Props) => {\r\n  return (\r\n    <Segment>\r\n      <Grid>\r\n        <Grid.Column width={12}>\r\n          <Item.Group>\r\n            <Item>\r\n              <Item.Image avatar size=\"small\" src={profile.image || \"/assets/user.png\"} />\r\n              <Item.Content verticalAlign=\"middle\">\r\n                <Header as=\"h1\" content={profile.displayName} />\r\n              </Item.Content>\r\n            </Item>\r\n          </Item.Group>\r\n        </Grid.Column>\r\n        <Grid.Column width={4}>\r\n          <Statistic.Group widths={2}>\r\n            <Statistic label=\"Followers\" value={profile.followersCount} />\r\n            <Statistic label=\"Following\" value={profile.followingCount} />\r\n          </Statistic.Group>\r\n          <Divider />\r\n          <FollowButton profile={profile} />\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Segment>\r\n  );\r\n};\r\n\r\nexport default observer(ProfileHeader);\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { Fragment, useEffect } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nimport LoadingComponent from \"../../app/layout/loadingComponent/LoadingComponent\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport ProfileContent from \"./ProfileContent\";\r\nimport ProfileHeader from \"./ProfileHeader\";\r\n\r\nconst ProfilePage = () => {\r\n  const { username } = useParams<{ username: string }>();\r\n  const { profileStore } = useStore();\r\n  const { loadingProfile, loadProfile, profile, setActiveTab } = profileStore;\r\n\r\n  useEffect(() => {\r\n    loadProfile(username);\r\n\r\n    return () => {\r\n      setActiveTab(0);\r\n    };\r\n  }, [setActiveTab, loadProfile, username]);\r\n\r\n  if (loadingProfile) return <LoadingComponent content=\"Loading Profile...\" />;\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column>\r\n        {profile && (\r\n          <Fragment>\r\n            <ProfileHeader profile={profile} />\r\n            <ProfileContent profile={profile!} />\r\n          </Fragment>\r\n        )}\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default observer(ProfilePage);\r\n","import React from \"react\";\r\nimport { Redirect, Route, RouteComponentProps, RouteProps } from \"react-router\";\r\nimport { useStore } from \"../stores/store\";\r\n\r\ninterface Props extends RouteProps {\r\n  component: React.ComponentType<RouteComponentProps<any>> | React.ComponentType<any>;\r\n}\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }: Props) => {\r\n  const {\r\n    userStore: { isLoggedIn },\r\n  } = useStore();\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => (isLoggedIn ? <Component {...props} /> : <Redirect to=\"/\" />)}\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import React, { Fragment } from \"react\";\r\nimport ActivitiesDashboard from \"../../features/activities/dashboard/activitiesDashboard/ActivitiesDashboard\";\r\nimport { Container } from \"semantic-ui-react\";\r\nimport NavBar from \"./navBar/NavBar\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Route, Switch, useLocation } from \"react-router-dom\";\r\nimport HomePage from \"../../features/home/homePage/HomePage\";\r\nimport ActivityForm from \"../../features/activities/form/activityForm/ActivityForm\";\r\nimport ActivityDetails from \"../../features/activities/details/activityDetails/ActivityDetails\";\r\nimport TestErrors from \"../../features/errors/TestErrors\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport NotFound from \"../../features/errors/NotFound\";\r\nimport ServerError from \"../../features/errors/ServerError\";\r\nimport { useStore } from \"../stores/store\";\r\nimport { useEffect } from \"react\";\r\nimport LoadingComponent from \"./loadingComponent/LoadingComponent\";\r\nimport ModalContainer from \"../common/modals/modalContainer/ModalContainer\";\r\nimport ProfilePage from \"../../features/profiles/ProfilePage\";\r\nimport PrivateRoute from \"./PrivateRoute\";\r\n\r\nfunction App() {\r\n  const location = useLocation();\r\n\r\n  const { commonStore, userStore } = useStore();\r\n\r\n  useEffect(() => {\r\n    if (commonStore.token) {\r\n      userStore.getUser().finally(() => commonStore.setAppLoaded());\r\n    } else {\r\n      userStore.getFacebookLoginStatus().then(() => commonStore.setAppLoaded());\r\n    }\r\n  }, [commonStore, userStore]);\r\n\r\n  if (!commonStore.setAppLoaded) return <LoadingComponent content=\"Loading App...\" />;\r\n\r\n  return (\r\n    <Fragment>\r\n      <ToastContainer position=\"bottom-right\" hideProgressBar />\r\n      <ModalContainer />\r\n      <Route exact path=\"/\" component={HomePage} />\r\n      <Route\r\n        path={\"/(.+)\"}\r\n        render={() => (\r\n          <>\r\n            <NavBar />\r\n            <Container style={{ marginTop: \"7em\" }}>\r\n              <Switch>\r\n                <PrivateRoute exact path=\"/activities\" component={ActivitiesDashboard} />\r\n                <PrivateRoute path=\"/activities/:id\" component={ActivityDetails} />\r\n                <PrivateRoute\r\n                  key={location.key}\r\n                  path={[\"/createActivity\", \"/manage/:id\"]}\r\n                  component={ActivityForm}\r\n                />\r\n                <PrivateRoute path=\"/profiles/:username\" component={ProfilePage} />\r\n                <PrivateRoute path=\"/errors\" component={TestErrors} />\r\n                <Route path=\"/server-error\" component={ServerError} />\r\n                <Route component={NotFound} />\r\n              </Switch>\r\n            </Container>\r\n          </>\r\n        )}\r\n      />\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default observer(App);\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nexport default function ScrollToTop() {\r\n  const { pathname } = useLocation();\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [pathname]);\r\n\r\n  return null;\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport \"react-calendar/dist/Calendar.css\";\r\nimport \"react-toastify/dist/ReactToastify.min.css\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport \"./app/layout/styles.css\";\r\nimport App from \"./app/layout/App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { store, StoreContext } from \"./app/stores/store\";\r\nimport { Router } from \"react-router-dom\";\r\nimport { createBrowserHistory } from \"history\";\r\nimport ScrollToTop from \"./app/layout/ScrollToTop\";\r\n\r\nexport const history = createBrowserHistory();\r\n\r\nReactDOM.render(\r\n  <StoreContext.Provider value={store}>\r\n    <Router history={history}>\r\n      <ScrollToTop />\r\n      <App />\r\n    </Router>\r\n  </StoreContext.Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}